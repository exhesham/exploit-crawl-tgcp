var https = require('https');
var fs = require('fs');
var path = require('path');
const api = require('./api.js')

const cheerio = require('cheerio');

const CONF_FILE = 'properties.conf';
const COOKIE_FILE = 'cookie.txt';

const conf = api.read_json_file(CONF_FILE);
var cookies = api.read_text_file(COOKIE_FILE);



async function reveal_video_link_from_iframe(url){
    var body = await api.get_html_from_url(url,cookies);
    body = body.replace(/\r?\n|\r/g, " ")
    var pattern = /sources:\s+\[.*\]/i
    if(!pattern.test(body)){
        throw 'cannot find sources!!!'
    }
    var sources = pattern.exec(body);
    if(sources.length  == 1){
        var data = sources[0];
        data = data.replace(/\t/g, "")
        data = data.replace(/\'/g, "\"")
        data = data.replace(" ", "")
	    data = data.substring(0,data.indexOf('],')) + '{}]'

	    data = '{' + data + '}';
	    data = data.replace(/https:\/\//g, 'IM_AN_HTTPS');
	    data = data.replace(/(['"])?([a-zA-Z0-9]+)(['"])?:/g, '"$2":');
	    data = data.replace(/IM_AN_HTTPS/g, 'https://');
        var resolutions = JSON.parse(data);
	    var video_urls = resolutions['sources']
	    // get max res
	    var video_url = video_urls[0];


	    for(var i in video_urls){
		    if(video_urls[i].label > video_url.label){
			    video_url = video_urls[i];
		    }
	    }
        return video_url;
    }else{
        throw 'sources length is not 1'
    }


}
function parse_lecture_from_html_body(body){
    var lecture = {};
    var lessons = [];
    const $ = cheerio.load(body);
    lecture.title = $('.course-info-container h1')[0].children[0].data;
    $('.list-tray-item').each(function (i, elem) {
        var lesson_index = api.lpad($(this).find($(".list-tray-item-index"))[0].children[0].data, 2);
        var lesson_url = $(this)[0].attribs['href'];
        var lesson_id = $(this)[0].attribs['data-film-id'];
        var lesson_title = $(this)[0].attribs['data-title'];
        lessons.push({
            'index': lesson_index,
            'title': lesson_title,
            'url': lesson_url,
            'id': lesson_id
        });
    });
    lecture.lessons = lessons;
    return lecture;
}

async function download_lesson(url){
	var body = await api.get_html_from_url(url, cookies);
	var lecture = parse_lecture_from_html_body(body);
	var output_dir = conf.output_folder? conf.output_folder:path.join( __dirname,'downloads');
	// create the folder
	var lecture_folder =path.join(output_dir, api.to_friendly_filename(lecture.title));
	if(!fs.existsSync(lecture_folder)){
		console.debug('create directory ' + lecture_folder);
		//api.create_dir_sync(lecture_folder);
		fs.mkdirSync(lecture_folder);
	}
	// try to load cache of meta.json
	//var cached_lecture = api.read_json_from_file(path.join(lecture_folder,'meta.json'));
	//TODO: Do something with the cache - dont load the link if already in the cache..will do so when really in need...
	for(var i in lecture.lessons){
		var lesson = lecture.lessons[i];
		try{
			// get the mp4 url from the iframe
			var iframe_source = conf.iframe_base_url + lesson.id;
			var video_meta = await reveal_video_link_from_iframe(iframe_source);
			var video_url = video_meta.file;
			var video_type = video_meta.type?video_meta.type:'mp4';
			var lesson_name = api.to_friendly_filename(lesson.index + ' - '+lesson.title.trim())+'.'+video_type;
			var lesson_path = path.join(lecture_folder,lesson_name);
			var remote_file_size = await api.get_remote_filesize(video_url);
			lecture.lessons[i].video_size = remote_file_size;
			lecture.lessons[i].video_url = video_meta;
			fs.writeFileSync(path.join(lecture_folder,'meta.json'), lecture, 'utf8'); // update the meta data

			if(fs.existsSync(lesson_path) &&  (actualSize = fs.statSync(lesson_path)['size']) != remote_file_size){
				console.warn('will overwrite file ' + lesson_path + ' because its size ('+actualSize+') ' + (actualSize < remote_file_size ? ' LESS ': ' MORE ') + ' than ' + remote_file_size);
				fs.unlinkSync(lesson_path);
			}
			if(fs.existsSync(lesson_path) && conf.overwrite_exists == false){
				console.warn('the lesson ' + lesson_name + ' exists, will not download it')
				continue;
			}
			console.log('Downloading ', lesson_name, ' to folder ', lecture_folder);
			api.download_file(video_url,lesson_path);

			await api.sleep(conf.delay_between_each_download_ms);
		}catch (e){
			console.error('Failed Downloading ', lesson_name, ' to folder ', lecture_folder, e);
		}

	}
}
async function main(){
	var urls = fs.readFileSync('lessons.urls', 'utf-8')
	.split('\n')
	.filter(Boolean);
	for(var i in urls){
		var url = urls[i];
		if(!url || url.trim().charAt(0)=='#'){
			console.log('will not download commented ' + url)
			continue;
		}
		try{
			await download_lesson(url);
		}catch (e){
			console.error('Error: failed to download lesson ' + url);
		}

	}

}
main().then(body =>{
	console.log("Finished!");
}).catch(err=>console.error(err));

//reveal_video_link_from_iframe('https://www.thegreatcoursesplus.com/embed/player?filmId=00000161-e7d8-dcbf-a561-f7de7d2c0000', cookies).then(url=>console.log(url));
//download_lesson_iframe('https://vtgcmp4-viewlift.akamaized.net/Renditions/2018/03/1520013053241_3733_01/feb56f24-56a1-4a23-ba0a-f1df0ad37347.mp4?7544bdcc50dae6fd8d8ebeb3ba54706c7eb1db7bd808eb469b2096b72d88a24859ebd5b074e68f81d4906febba6dd9a40b&hdnts=st=1525436261~exp=1525522661~acl=/*~hmac=b1cbcbc4fd7e747d19aa0f23acd6d6cc7542ed3b172e559f364f2c9d09b3e42a', cookies, './')